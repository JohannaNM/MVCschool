// <auto-generated />
using MVCschool.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVCschool.Migrations
{
    [DbContext(typeof(SchoolContext))]
    partial class SchoolContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MVCschool.Models.Class", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassId"));

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("ClassId");

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            ClassId = 1,
                            ClassName = "1A"
                        },
                        new
                        {
                            ClassId = 2,
                            ClassName = "2B"
                        },
                        new
                        {
                            ClassId = 3,
                            ClassName = "3C"
                        });
                });

            modelBuilder.Entity("MVCschool.Models.Course", b =>
                {
                    b.Property<int>("CourseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseID"));

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CourseID");

                    b.HasIndex("TeacherId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseID = 1,
                            TeacherId = 1,
                            Title = "Programing 1"
                        },
                        new
                        {
                            CourseID = 2,
                            TeacherId = 2,
                            Title = "Math 1"
                        },
                        new
                        {
                            CourseID = 3,
                            TeacherId = 3,
                            Title = "English"
                        },
                        new
                        {
                            CourseID = 4,
                            TeacherId = 4,
                            Title = "Music"
                        },
                        new
                        {
                            CourseID = 5,
                            TeacherId = 1,
                            Title = "programing 2"
                        });
                });

            modelBuilder.Entity("MVCschool.Models.Enrollment", b =>
                {
                    b.Property<int>("EnrollmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnrollmentId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("EnrollmentId");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("Enrollments");

                    b.HasData(
                        new
                        {
                            EnrollmentId = 1,
                            CourseId = 1,
                            StudentId = 1
                        },
                        new
                        {
                            EnrollmentId = 2,
                            CourseId = 1,
                            StudentId = 2
                        },
                        new
                        {
                            EnrollmentId = 3,
                            CourseId = 1,
                            StudentId = 3
                        },
                        new
                        {
                            EnrollmentId = 4,
                            CourseId = 1,
                            StudentId = 4
                        },
                        new
                        {
                            EnrollmentId = 5,
                            CourseId = 1,
                            StudentId = 5
                        },
                        new
                        {
                            EnrollmentId = 6,
                            CourseId = 1,
                            StudentId = 6
                        },
                        new
                        {
                            EnrollmentId = 7,
                            CourseId = 2,
                            StudentId = 7
                        },
                        new
                        {
                            EnrollmentId = 8,
                            CourseId = 2,
                            StudentId = 8
                        },
                        new
                        {
                            EnrollmentId = 9,
                            CourseId = 2,
                            StudentId = 9
                        },
                        new
                        {
                            EnrollmentId = 10,
                            CourseId = 2,
                            StudentId = 10
                        },
                        new
                        {
                            EnrollmentId = 11,
                            CourseId = 2,
                            StudentId = 11
                        },
                        new
                        {
                            EnrollmentId = 12,
                            CourseId = 2,
                            StudentId = 12
                        },
                        new
                        {
                            EnrollmentId = 13,
                            CourseId = 3,
                            StudentId = 13
                        },
                        new
                        {
                            EnrollmentId = 14,
                            CourseId = 3,
                            StudentId = 14
                        },
                        new
                        {
                            EnrollmentId = 15,
                            CourseId = 3,
                            StudentId = 15
                        },
                        new
                        {
                            EnrollmentId = 16,
                            CourseId = 3,
                            StudentId = 16
                        },
                        new
                        {
                            EnrollmentId = 17,
                            CourseId = 3,
                            StudentId = 17
                        },
                        new
                        {
                            EnrollmentId = 18,
                            CourseId = 3,
                            StudentId = 18
                        },
                        new
                        {
                            EnrollmentId = 19,
                            CourseId = 4,
                            StudentId = 1
                        },
                        new
                        {
                            EnrollmentId = 20,
                            CourseId = 4,
                            StudentId = 2
                        },
                        new
                        {
                            EnrollmentId = 21,
                            CourseId = 4,
                            StudentId = 3
                        },
                        new
                        {
                            EnrollmentId = 22,
                            CourseId = 4,
                            StudentId = 4
                        },
                        new
                        {
                            EnrollmentId = 23,
                            CourseId = 4,
                            StudentId = 5
                        },
                        new
                        {
                            EnrollmentId = 24,
                            CourseId = 4,
                            StudentId = 6
                        },
                        new
                        {
                            EnrollmentId = 25,
                            CourseId = 5,
                            StudentId = 7
                        },
                        new
                        {
                            EnrollmentId = 26,
                            CourseId = 5,
                            StudentId = 8
                        },
                        new
                        {
                            EnrollmentId = 27,
                            CourseId = 5,
                            StudentId = 9
                        },
                        new
                        {
                            EnrollmentId = 28,
                            CourseId = 5,
                            StudentId = 10
                        },
                        new
                        {
                            EnrollmentId = 29,
                            CourseId = 5,
                            StudentId = 11
                        },
                        new
                        {
                            EnrollmentId = 30,
                            CourseId = 5,
                            StudentId = 12
                        },
                        new
                        {
                            EnrollmentId = 31,
                            CourseId = 2,
                            StudentId = 13
                        },
                        new
                        {
                            EnrollmentId = 32,
                            CourseId = 2,
                            StudentId = 14
                        },
                        new
                        {
                            EnrollmentId = 33,
                            CourseId = 2,
                            StudentId = 15
                        },
                        new
                        {
                            EnrollmentId = 34,
                            CourseId = 2,
                            StudentId = 16
                        },
                        new
                        {
                            EnrollmentId = 35,
                            CourseId = 2,
                            StudentId = 17
                        },
                        new
                        {
                            EnrollmentId = 36,
                            CourseId = 2,
                            StudentId = 18
                        });
                });

            modelBuilder.Entity("MVCschool.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("SFirstName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("SLastName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("StudentId");

                    b.HasIndex("ClassId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            ClassId = 1,
                            SFirstName = "Alexander",
                            SLastName = "Carson"
                        },
                        new
                        {
                            StudentId = 2,
                            ClassId = 1,
                            SFirstName = "Meredith",
                            SLastName = "Alonso"
                        },
                        new
                        {
                            StudentId = 3,
                            ClassId = 1,
                            SFirstName = "Arturo",
                            SLastName = "Anand"
                        },
                        new
                        {
                            StudentId = 4,
                            ClassId = 1,
                            SFirstName = "Gytis",
                            SLastName = "Barzdukas"
                        },
                        new
                        {
                            StudentId = 5,
                            ClassId = 1,
                            SFirstName = "Laura",
                            SLastName = "Norman"
                        },
                        new
                        {
                            StudentId = 6,
                            ClassId = 1,
                            SFirstName = "Irving",
                            SLastName = "Hills"
                        },
                        new
                        {
                            StudentId = 7,
                            ClassId = 2,
                            SFirstName = "Yan",
                            SLastName = "Li"
                        },
                        new
                        {
                            StudentId = 8,
                            ClassId = 2,
                            SFirstName = "Peggy",
                            SLastName = "Justice"
                        },
                        new
                        {
                            StudentId = 9,
                            ClassId = 2,
                            SFirstName = "Nino",
                            SLastName = "Olivetto"
                        },
                        new
                        {
                            StudentId = 10,
                            ClassId = 2,
                            SFirstName = "Adam",
                            SLastName = "Adams"
                        },
                        new
                        {
                            StudentId = 11,
                            ClassId = 2,
                            SFirstName = "Lilith",
                            SLastName = "Baker"
                        },
                        new
                        {
                            StudentId = 12,
                            ClassId = 2,
                            SFirstName = "Frank",
                            SLastName = "Evans"
                        },
                        new
                        {
                            StudentId = 13,
                            ClassId = 3,
                            SFirstName = "Lee",
                            SLastName = "Xiang"
                        },
                        new
                        {
                            StudentId = 14,
                            ClassId = 3,
                            SFirstName = "Mannie",
                            SLastName = "Quinn"
                        },
                        new
                        {
                            StudentId = 15,
                            ClassId = 3,
                            SFirstName = "Andrea",
                            SLastName = "Lopez"
                        },
                        new
                        {
                            StudentId = 16,
                            ClassId = 3,
                            SFirstName = "Alexander",
                            SLastName = "Smith"
                        },
                        new
                        {
                            StudentId = 17,
                            ClassId = 3,
                            SFirstName = "Walter",
                            SLastName = "White"
                        },
                        new
                        {
                            StudentId = 18,
                            ClassId = 3,
                            SFirstName = "Jacob",
                            SLastName = "Yakub"
                        });
                });

            modelBuilder.Entity("MVCschool.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherId"));

                    b.Property<string>("TFirstName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("TLastName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("TeacherId");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            TeacherId = 1,
                            TFirstName = "Find",
                            TLastName = "Waldo"
                        },
                        new
                        {
                            TeacherId = 2,
                            TFirstName = "David",
                            TLastName = "Toll"
                        },
                        new
                        {
                            TeacherId = 3,
                            TFirstName = "Anders",
                            TLastName = "Ullström"
                        },
                        new
                        {
                            TeacherId = 4,
                            TFirstName = "Léon",
                            TLastName = "Nahum"
                        });
                });

            modelBuilder.Entity("MVCschool.Models.Course", b =>
                {
                    b.HasOne("MVCschool.Models.Teacher", "Teacher")
                        .WithMany("Courses")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("MVCschool.Models.Enrollment", b =>
                {
                    b.HasOne("MVCschool.Models.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCschool.Models.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("MVCschool.Models.Student", b =>
                {
                    b.HasOne("MVCschool.Models.Class", "Class")
                        .WithMany("Students")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");
                });

            modelBuilder.Entity("MVCschool.Models.Class", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("MVCschool.Models.Course", b =>
                {
                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("MVCschool.Models.Student", b =>
                {
                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("MVCschool.Models.Teacher", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
